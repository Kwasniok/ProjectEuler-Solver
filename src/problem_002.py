#   coding=UTF_8
#
#   problem_002.py
#   ProjectEuler
#
#   This file was created by Jens Kwasniok on 15.08.16.
#   Copyright (c) 2016 Jens Kwasniok. All rights reserved.
#

from problem_000 import *

class Problem_002(Problem):
    
    def __init__(self):
        self.problem_nr = 2
        self.input_format = (InputType.NUMBER_INT, 0, 1000000000000)
        self.default_input = 4000000
        self.description_str = '''Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed ''' + dye_input_var("four million") + ''', find the sum of the even-valued terms
'''
    
    def calculate(self, N):
        
        res = 0
        fib = 1
        fib_old = 1
        while fib < N:
                
            fib_ = fib
            fib = fib + fib_old
            fib_old = fib_
            if fib%2 == 0:
                res += fib
                
        self.last_result = res

register_problem(Problem_002())
