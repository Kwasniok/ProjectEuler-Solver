#   coding=UTF_8
#
#   problem_045.py
#   ProjectEuler
#
#   This file was created by Jens Kwasniok on 15.08.16.
#   Copyright (c) 2016 Jens Kwasniok. All rights reserved.
#

from problem_000 import *
from ppe_math import triangle_number, triangle_number_inverse, is_triangle_number, is_pentagonal_number, is_hexagonal_number

class Problem_045(Problem):

    def __init__(self):
        self.problem_nr = 45
        self.input_format = (InputType.NUMBER_INT, 1, None)
        self.default_input = 40755
        self.description_str = '''Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle         Tn=n(n+1)/2       1, 3,  6, 10, 15, ...
Pentagonal       Pn=n(3n−1)/2      1, 5, 12, 22, 35, ...
Hexagonal        Hn=n(2n−1)        1, 6, 15, 28, 45, ...

It can be verified that T285 = P165 = H143 = ''' + dye_input_var(40755) + '''.

Find the next triangle number that is also pentagonal and hexagonal.
'''

    def calculate(self, N):

        n = int(triangle_number_inverse(N)) + 1
        t = triangle_number(n)
        while not (is_pentagonal_number(t) and is_hexagonal_number(t)):
            n += 1
            t = triangle_number(n)

        self.last_result = t
        self.last_result_details = n

    def details(self):
        n = self.last_result_details
        return "n = " + dye_highlight(n)

register_problem(Problem_045())
